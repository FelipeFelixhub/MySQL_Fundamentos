/* MODELAGEM BÁSICA 
ENTIDADE = TABELA
CAMPOS = ATRIBUTOS */

CLIENTE

NOME - CARACTER (30)
CPF - NUMERICO(11)
EMAIL - CARACTER(30)
TELEFONE - CARACTER(30)
ENDERECO - CARACTER(100)
SEXO - CARACTER(1)

/* PROCESSOS DE MODELAGEM */

/* FASE 01 E FASE 02 - AD ADM DE DADOS*/

MODELAGEM CONCEITUAL - RASCUNHO
MODELAGEM LOGICA - QUALQUER PROGRAMA DE MODELAGEM

/* FASE 03 - DBA / AD*/

MODELAGEM FISICA - SCRIPTS DE BANCO

/* INICIANDO A MODELAGEM FISICA */

/* CRIANDO O BANCO DE DADOS*/

CREATE DATABASE EXEMPLO;

CREATE DATABASE PROJETO;

/* EXIBINDO AS DATABASES CRIADAS */

SHOW DATABASES;

/*EXIBINDO BANCO CONECTADO */

STATUS;

/* CONECTANDO-SE AO BANCO*/

USE PROJETO;

/* CRIANDO A TABELA DE CLIENTES */

CREATE TABLE CLIENTE (
	NOME VARCHAR(30),
	SEXO CHAR(1),
	EMAIL VARCHAR(30),
	CPF INT(11),
	TELEFONE VARCHAR(30),
	ENDERECO VARCHAR(100)
	
);

/* VERIFICANDO AS TABELAS DO BANCO*/

SHOW TABLES;

USE EXEMPLO;
SHOW TABLES;

USE PROJETO;


/* DESCOBRINDO COMO É A ESTRUTURA DE UMA TABELA */

DESC CLIENTE;

/* sintaxe basica de inserção - INSERT INTO TABELA...*/

/* FORMA 01 - OMITINDO AS COLUNAS */

INSERT INTO CLIENTE VALUES('JOAO','M','JOAO@GMAIL.COM',988638273,'22923110','MAIA LACERDA - ESTACIO - RIO DE JANEIRO - RJ');

INSERT INTO CLIENTE VALUES('CELIA','F','CELIA@GMAIL.COM',541521456,'25078869','RIACHUELO -CENTRO - RIO DE JANEIRO - RJ');

INSERT INTO CLIENTE VALUES('JORGE','M',NULL,885755896,'58748898','OSCAR CURY - BOM RETIRO - PATOS DE MINAS - MG');

/* FORMA 02 - COLOCANDO AS COLUNAS */

INSERT INTO CLIENTE(NOME,SEXO,ENDERECO,TELEFONE,CPF) VALUES('LILIAN','F','SENADOR SOARES - TIJUCA - RIO DE JANEIRO - RJ','947785696',887774856);

/* FORMA 03 - INSERT COMPACTO - SOMENTE MYSQL */

INSERT INTO CLIENTE VALUES('ANA','F','ANA@GLOBO.COM',85548962,'548556985','PRES ANTONIO CARLOS - CENTRO - SAO PAULO - SP'),
('CARLA','F','CAARLA@TERATI.COM.BR',7745828,'66587458','SAMUEL SILVA - CENTRO - BELO HORIZONTE - MG');

INSERT INTO CLIENTE(NOME,SEXO,ENDERECO,TELEFONE,CPF) VALUES('CLARA','F','SENADOR SOARES - TIJUCA - RIO DE JANEIRO - RJ','883665843',99999999999);

/* O COMANDO SELECT
Selecao projecao e juncao
 */

SELECT NOW() AS DATA_HORA, 'FELIPE MAFRA' AS PROFESSOR;

SELECT 'FELIPE MAFRA';

SELECT 'BANCO DE DADOS';

/* ALIAS DE COLUNAS */

SELECT NOME AS CLIENTE, SEXO, EMAIL FROM CLIENTE;

SELECT NOME, SEXO, EMAIL, ENDERECO FROM CLIENTE;

SELECT EMAIL, SEXO, ENDERECO, NOME FROM CLIENTE;

SELECT EMAIL, SEXO, ENDERECO, NOME, NOW() AS DATA_HORA FROM CLIENTE;

/* APENAS PARA FINS ACADEMICOS */

SELECT * FROM CLIENTE;

/* FILTRANDO DADOS COM WHERE E LIKE */

SELECT NOME, TELEFONE FROM CLIENTE;

/* FILTRANDO */

SELECT NOME, SEXO FROM CLIENTE
WHERE SEXO = 'M';

SELECT NOME, ENDERECO FROM CLIENTE
WHERE SEXO = 'F';

SELECT NOME, SEXO FROM CLIENTE
WHERE ENDERECO = 'RJ'; /* VAZIO */

/* UTILIZANDO O LIKE */

SELECT NOME, SEXO FROM CLIENTE
WHERE ENDERECO LIKE 'RJ';

/* CARACTER CORINGA % -> QUALQUER COISA */

SELECT NOME, SEXO FROM CLIENTE
WHERE ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE ENDERECO LIKE '%CURY%';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE ENDERECO LIKE '%CENTRO%';

/* OPERADORES LOGICOS 
OR -> PARA QUE A SAIDA DA QUERY SEJA VERDADEIRA, BASTA QUE APENAS UMA CONDICAO SEJA VERDADEIRA
AND -> PARA QUE A SAIDA SEJA VERDADEIRA TODAS AS CONDICOES PRECISAM SER VERDADEIRAS */

/* OR -OU */

/* OPERADORES LOGICOS 
OR -> PARA QUE A SAIDA DA QUERY SEJA VERDADEIRA, BASTA QUE APENAS UMA CONDICAO SEJA VERDADEIRA
AND -> PARA QUE A SAIDA SEJA VERDADEIRA TODAS AS CONDICOES PRECISAM SER VERDADEIRAS */
/* AND - E */

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE SEXO = 'M' AND ENDERECO LIKE '&RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE SEXO = 'F' AND ENDERECO LIKE '&ESTACIO';


/* 6 - Trazer os dados dos autores do sexo masculino que tiveram livros publicados por São Paulo ou Rio de Janeiro (Questao desafio)*/

SELECT NOME_DO_AUTOR,SEXO_DO_AUTOR,UF_DA_EDITORA
FROM LIVROS
WHERE SEXO_DO_AUTOR = 'MASCULINO' AND ( UF_DA_EDITORA = 'SP' OR UF_DA_EDITORA = 'RJ');

/* COUNT(*), GROUP BY, PERFORMANCE COM OPERADORES LOGICOS */

/* CONTANDO OS REGISTROS DE UMA TABELA */

SELECT COUNT(*) AS "Quant de registros da Tab. CLIENTE"  
FROM CLIENTE;


 /* OPERADOR GROUP BY */
 
 SELECT SEXO, COUNT(*)
 FROM CLIENTE;
 
 SELECT SEXO, COUNT(*)
 FROM CLIENTE
 GROUP BY SEXO;

 
/* PERFORMANCE EM OPERADORES LOGICOS */
/* 1 MILHAO DE REGISTROS

PARA CONTAR
SELECT COUNT(*) FROM CLIENTES;

SELECT SEXO, COUNT(*) FROM CLIENTE
GROUP BY SEXO;

SELECT CIDADE, COUNT(*) FROM CLIENTE
GROUP BY CIDADE;

CONDICAO
SEXO = F 
CIDADE = RIO DE JANEIRO

SITUACAO - TRATANDO COM OU/OR
70% MULHERES = SEXO = F 
30% MORA NO RIO DE JANEIRO

SELECT NOME, SEXO, ENDERECO
FROM CLIENTE
WHERE SEXO = 'F'
OR CIDADE = 'RIO DE JANEIRO';

SITUACAO - TRATANDO COM E/AND 
70% MULHERES = SEXO = F 
30% MORA NO RIO DE JANEIRO

SELECT NOME, SEXO, ENDERECO
FROM CLIENTE
WHERE CIDADE = 'RIO DE JANEIRO'
AND SEXO = 'F';
*/


/* FILTRANDO VALORES NULOS */

SELECT NOME, SEXO, ENDERECO
FROM CLIENTE
WHERE EMAIL IS NULL;


SELECT NOME, SEXO, ENDERECO
FROM CLIENTE
WHERE EMAIL IS NOT NULL;

/* IS OU IS NOT NULL */

/* UTILIZANDO O UPDATE PARA ATUALIZAR VALORES */

SELECT NOME, EMAIL
FROM CLIENTE;

SELECT * FROM CLIENTE
WHERE NOME = 'LILIAN';

UPDATE CLIENTE
SET EMAIL = 'LILIAN@HOTMAIL.COM'
WHERE NOME = 'LILIAN'; 

SELECT * FROM CLIENTE
WHERE NOME = 'JORGE';

UPDATE CLIENTE
SET EMAIL = 'JORGE@GLOBO.COM'
WHERE NOME = 'JORGE';

/* COMMIT E ROLLBACK */

/* DELETANDO REGISTROS COM A CLAUSULA DELETE */

SELECT COUNT(*) FROM CLIENTE; --TOTAL 6

SELECT * FROM CLIENTE WHERE NOME = 'ANA';

SELECT COUNT(*) FROM CLIENTE -- TOTAL 1
WHERE NOME = 'ANA';

DELETE FROM CLIENTE
WHERE NOME = 'ANA';

SELECT COUNT(*) FROM CLIENTE;  --RESTANTE 5

SELECT * FROM CLIENTE;

INSERT INTO CLIENTE VALUES('CARLA','F','C.LOPES@UOL.COM',45638854,'44750048','RUA COPPER LEAF - WILLIAMSBURG - KITCHENER');

SELECT * FROM CLIENTE
WHERE NOME = 'CARLA'
OR EMAIL ='CAARLA@TERATI.COM.BR'; -- TRAZ TODO MUNDO COM PELO MENOS UMA DAS DUAS CONDICOES

SELECT * FROM CLIENTE
WHERE NOME = 'CARLA'
AND EMAIL ='CAARLA@TERATI.COM.BR'; -- TRAZ APENAS O RESGISTRO QUE SATISFACA AS DUAS CONDICOES

DELETE FROM CLIENTE
WHERE NOME = 'CARLA'
AND EMAIL ='CAARLA@TERATI.COM.BR';

SELECT * FROM CLIENTE;


/* PRIMEIRA FORMA NORMAL */

/* 
1 - TODO CAMPO VETORIZADO SE TORNARÁ OUTRA TABELA

2 - TODO CAMPO MULTIVALORADO SE TORNARÁ OUTRA TABELA.
	QUANDO O CAMPO FOR DIVISIVEL 

3 - TODA TABELA NECESSITA DE PELO MENOS UM CAMPO QUE IDENTIFIQUE TODO O REGISTRO COMO SENDO UNICO.
	ISSO É O QUE CHAMAMOS DE CHAVE PRIMARIA OU PRIMARE KEY.
*/


/* CADINALIDADE */

/* QUEM DEFINE A CARDINALIDADE É A REGRA DE NEGOCIOS */

/* PRIMEIRO ALGARISMO - OBRIGATORIEDADE 
0 - NAO OBRIGATORIO
1 - OBRIGATORIO

SEGUNDO ALGARISMO - CARDINALIDADE
1 - MAXIMO DE UM
N - MAIS DE UM
*/

CREATE DATABASE COMERCIO;

USE COMERCIO;

SHOW DATABASES;

CREATE TABLE CLIENTE(
	IDCLIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	SEXO ENUM('M','F') NOT NULL,
	EMAIL VARCHAR(50)UNIQUE,
	CPF VARCHAR(15) UNIQUE
);

CREATE TABLE ENDERECO(
	IDENDERECO INT PRIMARY KEY AUTO_INCREMENT,
	RUA VARCHAR(30) NOT NULL,
	BAIRRO VARCHAR(30) NOT NULL,
	CIDADE VARCHAR(30) NOT NULL,
	ESTADO CHAR(2) NOT NULL,
	ID_CLIENTE INT UNIQUE,
	FOREIGN KEY (ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
);

CREATE TABLE TELEFONE (
	IDTELEFONE INT PRIMARY KEY AUTO_INCREMENT,
	TIPO ENUM('RES','COM','CEL') NOT NULL,
	NUMERO VARCHAR(10) NOT NULL,
	ID_CLIENTE INT,
	FOREIGN KEY(ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
);

DROP TABLE ENDERECO;
DROP TABLE TELEFONE;



/* ENDERECO - OBRIGATORIO
CADASTRO DE SOMENTE UM.

TELEFONE - NAO OBRIGATORIO
CADASTRO DE MAIS DE UM OPCIONAL */


					/* CHAVES ESTRANGEIRAS */

/* CHAVE ESTRANGEIRA EH A CHAVE PRIMARIA DE UMA TABELA 
QUE VAI ATE A OUTRA TABELA PATA FAZER REFERENCIA ENTRE
REGISTROS */

/* EM RELACIONAMENTO 1 X 1 A CHAVE ESTRANGEIRA FICA NA TABELA MAIS FRACA */

/* EM RELACIONAMENTO 1 X N A CHAVE ESTRANGEIRA FICARA  SEMPRE NA
CARDINALIDADE N */
		

INSERT INTO CLIENTE VALUES(NULL, 'JOAO','M','JOAO@IG.COM','734538748927967');
INSERT INTO CLIENTE VALUES(NULL, 'CARLOS','M','CARLOS@IG.COM','734538368927967');
INSERT INTO CLIENTE VALUES(NULL, 'ANA','F','ANA@IG.COM','734538748927657');
INSERT INTO CLIENTE VALUES(NULL, 'CLARA','F',NULL,'734538748927989');
INSERT INTO CLIENTE VALUES(NULL, 'JORGE','M','JORGE@IG.COM','734436874927967');
INSERT INTO CLIENTE VALUES(NULL, 'CELIA','F','CELIA@IG.COM','734534748927967');

SELECT * FROM CLIENTE;

+-----------+--------+------+---------------+-----------------+
| IDCLIENTE | NOME   | SEXO | EMAIL         | CPF             |
+-----------+--------+------+---------------+-----------------+
|         1 | JOAO   | M    | JOAO@IG.COM   | 734538748927967 |
|         2 | CARLOS | M    | CARLOS@IG.COM | 734538368927967 |
|         3 | ANA    | F    | ANA@IG.COM    | 734538748927657 |
|         4 | CLARA  | F    | NULL          | 734538748927989 |
|         5 | CELIA  | F    | CELIA@IG.COM  | 734534748927967 |
|         6 | JORGE  | M    | JORGE@IG.COM  | 734436874927967 |
+-----------+--------+------+---------------+-----------------+

INSERT INTO ENDERECO VALUES(NULL,'RUA ANTONIO SA','CENTRO','B. HORIZONTE','MG',4);
INSERT INTO ENDERECO VALUES(NULL,'RUA CAPITAO HERMES','CENTRO','RIO DE JANEIRO','RJ',1);
INSERT INTO ENDERECO VALUES(NULL,'RUA PRESIDENTE VARGAS','JARDINS','SAO PAULO','SP',3);
INSERT INTO ENDERECO VALUES(NULL,'RUA ALFANDEGA','ESTACIO','RIO DE JANEIRO','RJ',2);
INSERT INTO ENDERECO VALUES(NULL,'RUA DO OUVIDOR','FLAMENGO','RIO DE JANEIRO','RJ',6);
INSERT INTO ENDERECO VALUES(NULL,'RUA URUGUAIANA','CENTRO','VITORIA','ES',5);

SELECT * FROM ENDERECO;

DESC TELEFONE;

INSERT INTO TELEFONE VALUES(NULL,'CEL','78374839',5);
INSERT INTO TELEFONE VALUES(NULL,'RES','783748765',5);
INSERT INTO TELEFONE VALUES(NULL,'CEL','783748789',1);
INSERT INTO TELEFONE VALUES(NULL,'COM','783748456',2);
INSERT INTO TELEFONE VALUES(NULL,'RES','783748393',1);
INSERT INTO TELEFONE VALUES(NULL,'CEL','483748396',3);
INSERT INTO TELEFONE VALUES(NULL,'CEL','883748398',3);
INSERT INTO TELEFONE VALUES(NULL,'COM','383748980',1);
INSERT INTO TELEFONE VALUES(NULL,'RES','983748476',5);
INSERT INTO TELEFONE VALUES(NULL,'CEL','883748468',2);

SELECT * FROM TELEFONE;

/* SELECAO, PROJECAO E JUNCAO */


/* PROJECAO -> EH TUDO QUE VOCE QUER VER NA TELA */

SELECT NOW() AS DATA_ATUAL;

SELECT 2 + 2 AS SOMA;

SELECT 2 + 2 AS SOMA, NOME, NOW() AS DATA_HORA
FROM CLIENTE;


/* SELECAO -> EH UM SUBCONJUNTO DO CONJUNTO TOTAL DE REGISTROS DE UMA TABELA
A CLAUSULA DE SELECAO EH O WHERE */


 SELECT NOME, SEXO, EMAIL /* PROJECAO */
 FROM CLIENTE /* ORIGEM */
 WHERE SEXO = 'F'; /* SELECAO */

 SELECT NUMERO /* PROJECAO */
 FROM TELEFONE /* ORIGEM */
 WHERE TIPO = 'CEL'; /* SELECAO */


/* JUNCAO -> JOIN */

SELECT NOME, EMAIL, IDCLIENTE
FROM CLIENTE;

SELECT ID_CLIENTE, BAIRRO, CIDADE
FROM ENDERECO;

+--------+---------------+-----------+
| NOME   | EMAIL         | IDCLIENTE |
+--------+---------------+-----------+
| JOAO   | JOAO@IG.COM   |         1 |
| CARLOS | CARLOS@IG.COM |         2 |
| ANA    | ANA@IG.COM    |         3 |
| CLARA  | NULL          |         4 |
| CELIA  | CELIA@IG.COM  |         5 |
| JORGE  | JORGE@IG.COM  |         6 |
+--------+---------------+-----------+

+------------+----------+----------------+
| ID_CLIENTE | BAIRRO   | CIDADE         |
+------------+----------+----------------+
|          4 | CENTRO   | B. HORIZONTE   |
|          1 | CENTRO   | RIO DE JANEIRO |
|          3 | JARDINS  | SAO PAULO      |
|          2 | ESTACIO  | RIO DE JANEIRO |
|          6 | FLAMENGO | RIO DE JANEIRO |
|          5 | CENTRO   | VITORIA        |
+------------+----------+----------------+

/* NOME, SEXO, BAIRRO, CIDADE */

SELECT NOME, SEXO, BAIRRO, CIDADE /* PROJECAO */
FROM CLIENTE, ENDERECO /* ORIGEM */
WHERE IDCLIENTE = ID_CLIENTE; /* JUNCAO */

+--------+------+----------+----------------+
| NOME   | SEXO | BAIRRO   | CIDADE         |
+--------+------+----------+----------------+
| JOAO   | M    | CENTRO   | RIO DE JANEIRO |
| CARLOS | M    | ESTACIO  | RIO DE JANEIRO |
| ANA    | F    | JARDINS  | SAO PAULO      |
| CLARA  | F    | CENTRO   | B. HORIZONTE   |
| CELIA  | F    | CENTRO   | VITORIA        |
| JORGE  | M    | FLAMENGO | RIO DE JANEIRO |
+--------+------+----------+----------------+

/* WHERE = SELECAO */

SELECT NOME, SEXO, BAIRRO, CIDADE 
FROM CLIENTE, ENDERECO 
WHERE IDCLIENTE = ID_CLIENTE
AND SEXO = 'F';

+-------+------+---------+--------------+
| NOME  | SEXO | BAIRRO  | CIDADE       |
+-------+------+---------+--------------+
| ANA   | F    | JARDINS | SAO PAULO    |
| CLARA | F    | CENTRO  | B. HORIZONTE |
| CELIA | F    | CENTRO  | VITORIA      |
+-------+------+---------+--------------+

/* USANDO JOIN */

SELECT NOME, SEXO, BAIRRO, CIDADE
FROM CLIENTE
INNER JOIN ENDERECO
ON IDCLIENTE = ID_CLIENTE;

+--------+------+----------+----------------+
| NOME   | SEXO | BAIRRO   | CIDADE         |
+--------+------+----------+----------------+
| JOAO   | M    | CENTRO   | RIO DE JANEIRO |
| CARLOS | M    | ESTACIO  | RIO DE JANEIRO |
| ANA    | F    | JARDINS  | SAO PAULO      |
| CLARA  | F    | CENTRO   | B. HORIZONTE   |
| CELIA  | F    | CENTRO   | VITORIA        |
| JORGE  | M    | FLAMENGO | RIO DE JANEIRO |
+--------+------+----------+----------------+

SELECT NOME, SEXO, BAIRRO, CIDADE /* PROJECAO */
FROM CLIENTE /* ORIGEM */
	INNER JOIN ENDERECO /* JUNCAO */
	ON IDCLIENTE = ID_CLIENTE 
WHERE SEXO = 'F'; /* SELECAO */

+-------+------+---------+--------------+
| NOME  | SEXO | BAIRRO  | CIDADE       |
+-------+------+---------+--------------+
| ANA   | F    | JARDINS | SAO PAULO    |
| CLARA | F    | CENTRO  | B. HORIZONTE |
| CELIA | F    | CENTRO  | VITORIA      |
+-------+------+---------+--------------+

/* NOME, SEXO, EMAIL, TIPO, NUMERO */

SELECT NOME, SEXO, EMAIL, TIPO, NUMERO 
FROM CLIENTE
	INNER JOIN TELEFONE
	ON IDCLIENTE = ID_CLIENTE;

+--------+------+---------------+------+-----------+
| NOME   | SEXO | EMAIL         | TIPO | NUMERO    |
+--------+------+---------------+------+-----------+
| CELIA  | F    | CELIA@IG.COM  | CEL  | 78374839  |
| CELIA  | F    | CELIA@IG.COM  | RES  | 783748765 |
| JOAO   | M    | JOAO@IG.COM   | CEL  | 783748789 |
| CARLOS | M    | CARLOS@IG.COM | COM  | 783748456 |
| JOAO   | M    | JOAO@IG.COM   | RES  | 783748393 |
| ANA    | F    | ANA@IG.COM    | CEL  | 483748396 |
| ANA    | F    | ANA@IG.COM    | CEL  | 883748398 |
| JOAO   | M    | JOAO@IG.COM   | COM  | 383748980 |
| CELIA  | F    | CELIA@IG.COM  | RES  | 983748476 |
| CARLOS | M    | CARLOS@IG.COM | CEL  | 883748468 |
+--------+------+---------------+------+-----------+

/* NOME, SEXO, BAIRRO, CIDADE, TIPO, NUMERO */

SELECT CLIENTE.NOME, CLIENTE.SEXO, ENDERECO.BAIRRO, ENDERECO.CIDADE, TELEFONE.TIPO, TELEFONE.NUMERO
FROM CLIENTE
INNER JOIN ENDERECO
ON CLIENTE.IDCLIENTE = ENDERECO.ID_CLIENTE
INNER JOIN TELEFONE
ON CLIENTE.IDCLIENTE = TELEFONE.ID_CLIENTE;

+--------+------+---------+----------------+------+-----------+
| NOME   | SEXO | BAIRRO  | CIDADE         | TIPO | NUMERO    |
+--------+------+---------+----------------+------+-----------+
| CELIA  | F    | CENTRO  | VITORIA        | CEL  | 78374839  |
| CELIA  | F    | CENTRO  | VITORIA        | RES  | 783748765 |
| JOAO   | M    | CENTRO  | RIO DE JANEIRO | CEL  | 783748789 |
| CARLOS | M    | ESTACIO | RIO DE JANEIRO | COM  | 783748456 |
| JOAO   | M    | CENTRO  | RIO DE JANEIRO | RES  | 783748393 |
| ANA    | F    | JARDINS | SAO PAULO      | CEL  | 483748396 |
| ANA    | F    | JARDINS | SAO PAULO      | CEL  | 883748398 |
| JOAO   | M    | CENTRO  | RIO DE JANEIRO | COM  | 383748980 |
| CELIA  | F    | CENTRO  | VITORIA        | RES  | 983748476 |
| CARLOS | M    | ESTACIO | RIO DE JANEIRO | CEL  | 883748468 |
+--------+------+---------+----------------+------+-----------+

SELECT C.NOME, C.SEXO, E.BAIRRO, E.CIDADE, T.TIPO, T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;

+--------+------+---------+----------------+------+-----------+
| NOME   | SEXO | BAIRRO  | CIDADE         | TIPO | NUMERO    |
+--------+------+---------+----------------+------+-----------+
| CELIA  | F    | CENTRO  | VITORIA        | CEL  | 78374839  |
| CELIA  | F    | CENTRO  | VITORIA        | RES  | 783748765 |
| JOAO   | M    | CENTRO  | RIO DE JANEIRO | CEL  | 783748789 |
| CARLOS | M    | ESTACIO | RIO DE JANEIRO | COM  | 783748456 |
| JOAO   | M    | CENTRO  | RIO DE JANEIRO | RES  | 783748393 |
| ANA    | F    | JARDINS | SAO PAULO      | CEL  | 483748396 |
| ANA    | F    | JARDINS | SAO PAULO      | CEL  | 883748398 |
| JOAO   | M    | CENTRO  | RIO DE JANEIRO | COM  | 383748980 |
| CELIA  | F    | CENTRO  | VITORIA        | RES  | 983748476 |
| CARLOS | M    | ESTACIO | RIO DE JANEIRO | CEL  | 883748468 |
+--------+------+---------+----------------+------+-----------+



/*
	 DML -> DATA MANIPULATION LANGUAGE
	 DDL -> DATA DEFINITION LANGUAGE
	 DCL -> DATA CONTROL LANGUAGE
	 TCL -> TRANSACTION CONTROL LANGUAGE
*/

/* DML */

/* INSERT */
 INSERT INTO CLIENTE VALUES(NULL,'PAULA','M',NULL,766568967);
 INSERT INTO ENDERECO VALUES(NULL,'RUA JOAQUIM SILVA','ALVORADA','NITEROI','RJ',7);

 SELECT * FROM CLIENTE;

 /* FILTROS */

 SELECT * FROM CLIENTE
 WHERE SEXO = 'M';

 /* UPDATE */

 SELECT * FROM CLIENTE
 WHERE IDCLIENTE = 7;

UPDATE CLIENTE
SET SEXO ='F'
WHERE IDCLIENTE = 7;

/* DELETE */

 INSERT INTO CLIENTE VALUES(NULL,'XXX','M',NULL,'XXX');

 SELECT * FROM CLIENTE
 WHERE IDCLIENTE = 8;

 DELETE FROM CLIENTE 
 WHERE IDCLIENTE = 8;

 SELECT * FROM CLIENTE;


 /* DDL - DATA DEFINITION LANGUAGE */

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME_PRODUTO VARCHAR(30) NOT NULL,
	PRECO INT,
	FRETE FLOAT(20,2) NOT NULL
);


/* ALTER TABLE */

/* ALTERANDO O NOME DE UMA COLUNA - CHANGE */

ALTER TABLE PRODUTO 
CHANGE PRECO VALOR_UNITARIO INT NOT NULL;

DESC PRODUTO;

+----------------+-------------+------+-----+---------+----------------+
| Field          | Type        | Null | Key | Default | Extra          |
+----------------+-------------+------+-----+---------+----------------+
| IDPRODUTO      | int(11)     | NO   | PRI | NULL    | auto_increment |
| NOME_PRODUTO   | varchar(30) | NO   |     | NULL    |                |
| VALOR_UNITARIO | int(11)     | NO   |     | NULL    |                |
| FRETE          | float(20,2) | NO   |     | NULL    |                |
+----------------+-------------+------+-----+---------+----------------+


ALTER TABLE PRODUTO 
CHANGE VALOR_UNITARIO VALOR_UNITARIO INT;

+----------------+-------------+------+-----+---------+----------------+
| Field          | Type        | Null | Key | Default | Extra          |
+----------------+-------------+------+-----+---------+----------------+
| IDPRODUTO      | int(11)     | NO   | PRI | NULL    | auto_increment |
| NOME_PRODUTO   | varchar(30) | NO   |     | NULL    |                |
| VALOR_UNITARIO | int(11)     | YES  |     | NULL    |                |
| FRETE          | float(20,2) | NO   |     | NULL    |                |
+----------------+-------------+------+-----+---------+----------------+

/* MODIFY - ALTERANDO O TIPO */

ALTER TABLE PRODUTO 
MODIFY VALOR_UNITARIO VARCHAR(50) NOT NULL;

/* ADICIONANDO COLUNAS */


ALTER TABLE PRODUTO 
ADD PESO FLOAT(10,2) NOT NULL;

/* APAGANDO UMA COLUNA */

ALTER TABLE PRODUTO
DROP COLUMN PESO;

/* ADICIONANDO UMA COLUNA NA ORDEM ESOECIFICA */

ALTER TABLE PRODUTO 
ADD COLUMN PESO FLOAT(10,2) NOT NULL
AFTER NOME_PRODUTO;

ALTER TABLE PRODUTO
DROP COLUMN PESO;

ALTER TABLE PRODUTO 
ADD COLUMN PESO FLOAT(10,2) NOT NULL
FIRST;

/* EXERCICIOS DE DML */

DROP DATABASE COMERCIO;


CREATE DATABASE COMERCIO;

USE COMERCIO;

SHOW DATABASES;

DROP TABLE CLIENTE;

CREATE TABLE CLIENTE(
	IDCLIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	SEXO ENUM('M','F') NOT NULL,
	EMAIL VARCHAR(50) UNIQUE,
	CPF VARCHAR(15) UNIQUE
);

CREATE TABLE ENDERECO(
	IDENDERECO INT PRIMARY KEY AUTO_INCREMENT, 
	RUA VARCHAR(30) NOT NULL,
	BAIRRO VARCHAR(30) NOT NULL,
	CIDADE VARCHAR(30) NOT NULL,
	ESTADO CHAR(2) NOT NULL,
	ID_CLIENTE INT UNIQUE,

	FOREIGN KEY(ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
);

CREATE TABLE TELEFONE(
	IDTELEFONE INT PRIMARY KEY AUTO_INCREMENT, 
	TIPO ENUM('RES','COM','CEL') NOT NULL,
	NUMERO VARCHAR(10) NOT NULL,
	ID_CLIENTE INT,

	FOREIGN KEY(ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
);


INSERT INTO CLIENTE VALUES(NULL,'JOAO','M','JOAOA@IG.COM','76567587887');
INSERT INTO CLIENTE VALUES(NULL,'CARLOS','M','CARLOSA@IG.COM','5464553466');
INSERT INTO CLIENTE VALUES(NULL,'ANA','F','ANA@IG.COM','456545678');
INSERT INTO CLIENTE VALUES(NULL,'CLARA','F',NULL,'5687766856');
INSERT INTO CLIENTE VALUES(NULL,'JORGE','M','JORGE@IG.COM','8756547688');
INSERT INTO CLIENTE VALUES(NULL,'CELIA','M','JCELIA@IG.COM','5767876889');

INSERT INTO ENDERECO VALUES(NULL,'RUA ANTONIO SA','CENTRO','B. HORIZONTE','MG',4);
INSERT INTO ENDERECO VALUES(NULL,'RUA CAPITAO HERMES','CENTRO','RIO DE JANEIRO','RJ',1);
INSERT INTO ENDERECO VALUES(NULL,'RUA PRES VARGAS','JARDINS','SAO PAULO','SP',3);
INSERT INTO ENDERECO VALUES(NULL,'RUA ALFANDEGA','ESTACIO','RIO DE JANEIRO','RJ',2);
INSERT INTO ENDERECO VALUES(NULL,'RUA DO OUVIDOR','FLAMENGO','RIO DE JANEIRO','RJ',6);
INSERT INTO ENDERECO VALUES(NULL,'RUA URUGUAIANA','CENTRO','VITORIA','ES',5);

INSERT INTO TELEFONE VALUES(NULL,'CEL','78458743',5);
INSERT INTO TELEFONE VALUES(NULL,'RES','56576876',5);
INSERT INTO TELEFONE VALUES(NULL,'CEL','87866896',1);
INSERT INTO TELEFONE VALUES(NULL,'COM','54768899',2);
INSERT INTO TELEFONE VALUES(NULL,'RES','99667587',1);
INSERT INTO TELEFONE VALUES(NULL,'CEL','78989765',3);
INSERT INTO TELEFONE VALUES(NULL,'CEL','99766676',3);
INSERT INTO TELEFONE VALUES(NULL,'COM','66687899',1);
INSERT INTO TELEFONE VALUES(NULL,'RES','89986668',5);
INSERT INTO TELEFONE VALUES(NULL,'CEL','88687909',2);

INSERT INTO CLIENTE VALUES(NULL,'PAULA','M',NULL,'77437493');
INSERT INTO ENDERECO VALUES(NULL,'RUA JOAQUIM SILVA','ALVORADA','NITEROI','RJ',7);

INSERT INTO CLIENTE VALUES(NULL,'XXX','M',NULL,'XXX');

SELECT * FROM CLIENTE
WHERE IDCLIENTE = 8;

DELETE FROM CLIENTE WHERE IDCLIENTE = 8;

SELECT * FROM CLIENTE;

INSERT INTO CLIENTE VALUES(NULL,'FLAVIO','M','FLAVIO@IG.COM','4657765');
INSERT INTO CLIENTE VALUES(NULL,'ANDRE','M','ANDRE@GLOBO.COM','7687567');
INSERT INTO CLIENTE VALUES(NULL,'GIOVANA','F',NULL,'0876655');
INSERT INTO CLIENTE VALUES(NULL,'KARLA','M','KARLA@GMAIL.COM','545676778');
INSERT INTO CLIENTE VALUES(NULL,'DANIELE','M','DANIELE@GMAIL.COM','43536789');
INSERT INTO CLIENTE VALUES(NULL,'LORENA','M',NULL,'774557887');
INSERT INTO CLIENTE VALUES(NULL,'EDUARDO','M',NULL,'54376457');
INSERT INTO CLIENTE VALUES(NULL,'ANTONIO','F','ANTONIO@IG.COM','12436767');
INSERT INTO CLIENTE VALUES(NULL,'ANTONIO','M','ANTONIO@UOL.COM','3423565');
INSERT INTO CLIENTE VALUES(NULL,'ELAINE','M','ELAINE@GLOBO.COM','32567763');
INSERT INTO CLIENTE VALUES(NULL,'CARMEM','M','CARMEM@IG.COM','787832213');
INSERT INTO CLIENTE VALUES(NULL,'ADRIANA','F','ADRIANA@GMAIL.COM','88556942');
INSERT INTO CLIENTE VALUES(NULL,'JOICE','F','JOICE@GMAIL.COM','55412256');

/* CADASTRE UM ENDERECO PARA CADA CLIENTE */

INSERT INTO ENDERECO VALUES(NULL,'RUA GUEDES','CASCADURA','B. HORIZONTE','MG',9);
INSERT INTO ENDERECO VALUES(NULL,'RUA MAIA LACERDA','ESTACIO','RIO DE JANEIRO','RJ',10);
INSERT INTO ENDERECO VALUES(NULL,'RUA VISCONDESSA','CENTRO','RIO DE JANEIRO','RJ',11);
INSERT INTO ENDERECO VALUES(NULL,'RUA NELSON MANDELA','COPACABANA','RIO DE JANEIRO','RJ',12);
INSERT INTO ENDERECO VALUES(NULL,'RUA ARAUJO LIMA','CENTRO','VITORIA','ES',13);
INSERT INTO ENDERECO VALUES(NULL,'RUA CASTRO ALVES','LEBLON','RIO DE JANEIRO','RJ',14);
INSERT INTO ENDERECO VALUES(NULL,'AV CAPITAO ANTUNES','CENTRO','CURITIBA','PR',15);
INSERT INTO ENDERECO VALUES(NULL,'AV CARLOS BARROSO','JARDINS','SAO PAULO','SP',16);
INSERT INTO ENDERECO VALUES(NULL,'ALAMEDA SAMPAIO','BOM RETIRO','CURITIBA','PR',17);
INSERT INTO ENDERECO VALUES(NULL,'RUA DA LAPA','LAPA','SAO PAULO','SP',18);
INSERT INTO ENDERECO VALUES(NULL,'RUA GERONIMO','CENTRO','RIO DE JANEIRO','RJ',19);
INSERT INTO ENDERECO VALUES(NULL,'RUA GOMES FREIRE','CENTRO','RIO DE JANEIRO','RJ',20);
INSERT INTO ENDERECO VALUES(NULL,'RUA GOMES FREIRE','CENTRO','RIO DE JANEIRO','RJ',21);

/* CADASTRE TELEFONES PARA OS CLIENTES */


INSERT INTO TELEFONE VALUES(NULL,'RES','68976565',9);
INSERT INTO TELEFONE VALUES(NULL,'CEL','99656675',9);
INSERT INTO TELEFONE VALUES(NULL,'CEL','33567765',11);
INSERT INTO TELEFONE VALUES(NULL,'CEL','88668786',11);
INSERT INTO TELEFONE VALUES(NULL,'COM','55689654',11);
INSERT INTO TELEFONE VALUES(NULL,'COM','88687979',12);
INSERT INTO TELEFONE VALUES(NULL,'COM','88965676',13);
INSERT INTO TELEFONE VALUES(NULL,'CEL','89966809',15);
INSERT INTO TELEFONE VALUES(NULL,'COM','88679978',16);
INSERT INTO TELEFONE VALUES(NULL,'CEL','99655768',17);
INSERT INTO TELEFONE VALUES(NULL,'RES','89955665',18);
INSERT INTO TELEFONE VALUES(NULL,'RES','77455786',19);
INSERT INTO TELEFONE VALUES(NULL,'RES','89766554',19);
INSERT INTO TELEFONE VALUES(NULL,'RES','77755785',20);
INSERT INTO TELEFONE VALUES(NULL,'COM','44522578',20);
INSERT INTO TELEFONE VALUES(NULL,'CEL','44522579',21);


/* RELATORIO GERAL DE TODOS OS CLIENTES */

SELECT * FROM CLIENTE;

/* RELATORIO GERAL DE TODOS OS CLIENTES (TELEFONE E ENDERECO) */

DESC CLIENTE;
DESC ENDERECO;
DESC TELEFONE;

+-----------+---------------+------+-----+---------+----------------+
| Field     | Type          | Null | Key | Default | Extra          |
+-----------+---------------+------+-----+---------+----------------+
| IDCLIENTE | int(11)       | NO   | PRI | NULL    | auto_increment |
| NOME      | varchar(30)   | NO   |     | NULL    |                |
| SEXO      | enum('M','F') | NO   |     | NULL    |                |
| EMAIL     | varchar(50)   | YES  | UNI | NULL    |                |
| CPF       | varchar(15)   | YES  | UNI | NULL    |                |
+-----------+---------------+------+-----+---------+----------------+

+------------+-------------+------+-----+---------+----------------+
| Field      | Type        | Null | Key | Default | Extra          |
+------------+-------------+------+-----+---------+----------------+
| IDENDERECO | int(11)     | NO   | PRI | NULL    | auto_increment |
| RUA        | varchar(30) | NO   |     | NULL    |                |
| BAIRRO     | varchar(30) | NO   |     | NULL    |                |
| CIDADE     | varchar(30) | NO   |     | NULL    |                |
| ESTADO     | char(2)     | NO   |     | NULL    |                |
| ID_CLIENTE | int(11)     | YES  | UNI | NULL    |                |
+------------+-------------+------+-----+---------+----------------+

+------------+-------------------------+------+-----+---------+----------------+
| Field      | Type                    | Null | Key | Default | Extra          |
+------------+-------------------------+------+-----+---------+----------------+
| IDTELEFONE | int(11)                 | NO   | PRI | NULL    | auto_increment |
| TIPO       | enum('RES','COM','CEL') | NO   |     | NULL    |                |
| NUMERO     | varchar(10)             | NO   |     | NULL    |                |
| ID_CLIENTE | int(11)                 | YES  | MUL | NULL    |                |
+------------+-------------------------+------+-----+---------+----------------+


SELECT 	C.IDCLIENTE,C.NOME,C.SEXO,C.EMAIL,C.CPF,
		E.RUA,E.BAIRRO,E.CIDADE,E.ESTADO,
		T.TIPO,T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E 
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;


/* RELATORIO DE HOMENS */

SELECT 	C.IDCLIENTE,C.NOME,C.SEXO,C.EMAIL,C.CPF,
		E.RUA,E.BAIRRO,E.CIDADE,E.ESTADO,
		T.TIPO,T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E 
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'M';

/*12 13 18 19 */

SELECT * FROM CLIENTE
WHERE IDCLIENTE IN (12,13,18,19);



UPDATE CLIENTE SET SEXO = 'F'
WHERE IDCLIENTE IN (12,13,18,19);

/* RELATORIO DE MULHERES */

SELECT 	C.IDCLIENTE,C.NOME,C.SEXO,C.EMAIL,C.CPF,
		E.RUA,E.BAIRRO,E.CIDADE,E.ESTADO,
		T.TIPO,T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E 
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F';

/* 16 - ANTONIO */

UPDATE CLIENTE SET SEXO = 'M'
WHERE IDCLIENTE = 16;


/* QUANTIDADE DE HOMENS E MULHERES */

SELECT COUNT(*) AS QUANTIDADE, SEXO 
FROM CLIENTE
GROUP BY SEXO;

+------------+------+
| QUANTIDADE | SEXO |
+------------+------+
|         11 | M    |
|          9 | F    |
+------------+------+

/* IDS E EMAIL DAS MULHERES QUE MOREM NO CENTRO DO RIO DE JANEIRO E NAO TENHAM CELULAR */

SELECT 	C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO,
		E.ESTADO,
		T.TIPO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE 
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;



SELECT 	C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO,
		E.ESTADO,
		T.TIPO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE 
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F';


SELECT 	C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO,
		E.ESTADO,
		T.TIPO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE 
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F'
AND BAIRRO = 'CENTRO' AND CIDADE = 'RIO DE JANEIRO';



SELECT 	C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO,
		E.ESTADO,E.CIDADE, E.BAIRRO,
		T.TIPO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE 
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F'
AND BAIRRO = 'CENTRO' AND CIDADE = 'RIO DE JANEIRO'
AND TIPO = 'RES' OR TIPO = 'COM';


SELECT 	C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO,
		E.ESTADO,E.CIDADE, E.BAIRRO,
		T.TIPO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE 
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F'
AND BAIRRO = 'CENTRO' AND CIDADE = 'RIO DE JANEIRO'
AND (TIPO = 'RES' OR TIPO = 'COM');



/* PARA UMA CAMPANHA DE MARKETING, O SETOR SOLICITOU UM
RELATÓRIO COM O NOME, EMAIL E TELEFONE CELULAR 
DOS CLIENTES QUE MORAM NO ESTADO DO RIO DE JANEIRO 
VOCÊ TERÁ QUE PASSAR A QUERY PARA GERAR O RELATORIO PARA
O PROGRAMADOR */


SELECT C.NOME, C.EMAIL, T.NUMERO AS CELULAR /* PROJECAO */
FROM CLIENTE C /* ORIGEM */
INNER JOIN ENDERECO E /* JUNCAO */
ON C.IDCLIENTE = E.ID_CLIENTE /* JUNCAO CONDICAO */
INNER JOIN TELEFONE T /* JUNCAO */
ON C.IDCLIENTE = T.ID_CLIENTE /* JUNCAO CONDICAO */
WHERE TIPO = 'CEL' AND ESTADO = 'RJ'; /* SELECAO */

+---------+-----------------+----------+
| NOME    | EMAIL           | CELULAR  |
+---------+-----------------+----------+
| JOAO    | JOAOA@IG.COM    | 87866896 |
| CARLOS  | CARLOSA@IG.COM  | 88687909 |
| GIOVANA | NULL            | 33567765 |
| GIOVANA | NULL            | 88668786 |
| JOICE   | JOICE@GMAIL.COM | 44522579 |
+---------+-----------------+----------+



/* PARA UMA CAMPANHA DE PRODUTOS DE BELEZA, O COMERCIAL SOLICITOU UM
RELATÓRIO COM O NOME, EMAIL E TELEFONE CELULAR 
 DAS MULHERES QUE MORAM NO ESTADO DE SÃO PAULO 
VOCÊ TERÁ QUE PASSAR A QUERY PARA GERAR O RELATORIO PARA
O PROGRAMADOR */

SELECT C.NOME, C.EMAIL, T.NUMERO AS CELULAR
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F'
AND ESTADO = 'SP';


/* NOME, EMAIL, NUMERO, ESTADO */

SELECT C.NOME, C.EMAIL, T.NUMERO, E.ESTADO
FROM CLIENTE C 
INNER JOIN ENDERECO E  
ON IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T 
ON IDCLIENTE = T.ID_CLIENTE;

+---------+-------------------+----------+--------+
| NOME    | EMAIL             | NUMERO   | ESTADO |
+---------+-------------------+----------+--------+
| JORGE   | JORGE@IG.COM      | 78458743 | ES     |
| JORGE   | JORGE@IG.COM      | 56576876 | ES     |
| JOAO    | JOAOA@IG.COM      | 87866896 | RJ     |
| CARLOS  | CARLOSA@IG.COM    | 54768899 | RJ     |
| JOAO    | JOAOA@IG.COM      | 99667587 | RJ     |
| ANA     | ANA@IG.COM        | 78989765 | SP     |
| ANA     | ANA@IG.COM        | 99766676 | SP     |
| JOAO    | JOAOA@IG.COM      | 66687899 | RJ     |
| JORGE   | JORGE@IG.COM      | 89986668 | ES     |
| CARLOS  | CARLOSA@IG.COM    | 88687909 | RJ     |
| FLAVIO  | FLAVIO@IG.COM     | 68976565 | MG     |
| FLAVIO  | FLAVIO@IG.COM     | 99656675 | MG     |
| GIOVANA | NULL              | 33567765 | RJ     |
| GIOVANA | NULL              | 88668786 | RJ     |
| GIOVANA | NULL              | 55689654 | RJ     |
| KARLA   | KARLA@GMAIL.COM   | 88687979 | RJ     |
| DANIELE | DANIELE@GMAIL.COM | 88965676 | ES     |
| EDUARDO | NULL              | 89966809 | PR     |
| ANTONIO | ANTONIO@IG.COM    | 88679978 | SP     |
| ANTONIO | ANTONIO@UOL.COM   | 99655768 | PR     |
| ELAINE  | ELAINE@GLOBO.COM  | 89955665 | SP     |
| CARMEM  | CARMEM@IG.COM     | 77455786 | RJ     |
| CARMEM  | CARMEM@IG.COM     | 89766554 | RJ     |
| ADRIANA | ADRIANA@GMAIL.COM | 77755785 | RJ     |
| ADRIANA | ADRIANA@GMAIL.COM | 44522578 | RJ     |
| JOICE   | JOICE@GMAIL.COM   | 44522579 | RJ     |
+---------+-------------------+----------+--------+


IFNULL()


SELECT  C.NOME,
		IFNULL(C.EMAIL,'NAO TEM EMAIL'), 
		T.NUMERO, 
		E.ESTADO
FROM CLIENTE C 
INNER JOIN ENDERECO E  
ON IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T 
ON IDCLIENTE = T.ID_CLIENTE;

+---------+---------------------------------+----------+--------+
| NOME    | IFNULL(C.EMAIL,'NAO TEM EMAIL') | NUMERO   | ESTADO |
+---------+---------------------------------+----------+--------+
| JORGE   | JORGE@IG.COM                    | 78458743 | ES     |
| JORGE   | JORGE@IG.COM                    | 56576876 | ES     |
| JOAO    | JOAOA@IG.COM                    | 87866896 | RJ     |
| CARLOS  | CARLOSA@IG.COM                  | 54768899 | RJ     |
| JOAO    | JOAOA@IG.COM                    | 99667587 | RJ     |
| ANA     | ANA@IG.COM                      | 78989765 | SP     |
| ANA     | ANA@IG.COM                      | 99766676 | SP     |
| JOAO    | JOAOA@IG.COM                    | 66687899 | RJ     |
| JORGE   | JORGE@IG.COM                    | 89986668 | ES     |
| CARLOS  | CARLOSA@IG.COM                  | 88687909 | RJ     |
| FLAVIO  | FLAVIO@IG.COM                   | 68976565 | MG     |
| FLAVIO  | FLAVIO@IG.COM                   | 99656675 | MG     |
| GIOVANA | NAO TEM EMAIL                   | 33567765 | RJ     |
| GIOVANA | NAO TEM EMAIL                   | 88668786 | RJ     |
| GIOVANA | NAO TEM EMAIL                   | 55689654 | RJ     |
| KARLA   | KARLA@GMAIL.COM                 | 88687979 | RJ     |
| DANIELE | DANIELE@GMAIL.COM               | 88965676 | ES     |
| EDUARDO | NAO TEM EMAIL                   | 89966809 | PR     |
| ANTONIO | ANTONIO@IG.COM                  | 88679978 | SP     |
| ANTONIO | ANTONIO@UOL.COM                 | 99655768 | PR     |
| ELAINE  | ELAINE@GLOBO.COM                | 89955665 | SP     |
| CARMEM  | CARMEM@IG.COM                   | 77455786 | RJ     |
| CARMEM  | CARMEM@IG.COM                   | 89766554 | RJ     |
| ADRIANA | ADRIANA@GMAIL.COM               | 77755785 | RJ     |
| ADRIANA | ADRIANA@GMAIL.COM               | 44522578 | RJ     |
| JOICE   | JOICE@GMAIL.COM                 | 44522579 | RJ     |
+---------+---------------------------------+----------+--------+

SELECT  C.NOME,
		IFNULL(C.EMAIL,'NAO TEM EMAIL') AS 'E-MAIL', 
		T.NUMERO, 
		E.ESTADO
FROM CLIENTE C 
INNER JOIN ENDERECO E  
ON IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T 
ON IDCLIENTE = T.ID_CLIENTE;

+---------+-------------------+----------+--------+
| NOME    | E-MAIL            | NUMERO   | ESTADO |
+---------+-------------------+----------+--------+
| JORGE   | JORGE@IG.COM      | 78458743 | ES     |
| JORGE   | JORGE@IG.COM      | 56576876 | ES     |
| JOAO    | JOAOA@IG.COM      | 87866896 | RJ     |
| CARLOS  | CARLOSA@IG.COM    | 54768899 | RJ     |
| JOAO    | JOAOA@IG.COM      | 99667587 | RJ     |
| ANA     | ANA@IG.COM        | 78989765 | SP     |
| ANA     | ANA@IG.COM        | 99766676 | SP     |
| JOAO    | JOAOA@IG.COM      | 66687899 | RJ     |
| JORGE   | JORGE@IG.COM      | 89986668 | ES     |
| CARLOS  | CARLOSA@IG.COM    | 88687909 | RJ     |
| FLAVIO  | FLAVIO@IG.COM     | 68976565 | MG     |
| FLAVIO  | FLAVIO@IG.COM     | 99656675 | MG     |
| GIOVANA | NAO TEM EMAIL     | 33567765 | RJ     |
| GIOVANA | NAO TEM EMAIL     | 88668786 | RJ     |
| GIOVANA | NAO TEM EMAIL     | 55689654 | RJ     |
| KARLA   | KARLA@GMAIL.COM   | 88687979 | RJ     |
| DANIELE | DANIELE@GMAIL.COM | 88965676 | ES     |
| EDUARDO | NAO TEM EMAIL     | 89966809 | PR     |
| ANTONIO | ANTONIO@IG.COM    | 88679978 | SP     |
| ANTONIO | ANTONIO@UOL.COM   | 99655768 | PR     |
| ELAINE  | ELAINE@GLOBO.COM  | 89955665 | SP     |
| CARMEM  | CARMEM@IG.COM     | 77455786 | RJ     |
| CARMEM  | CARMEM@IG.COM     | 89766554 | RJ     |
| ADRIANA | ADRIANA@GMAIL.COM | 77755785 | RJ     |
| ADRIANA | ADRIANA@GMAIL.COM | 44522578 | RJ     |
| JOICE   | JOICE@GMAIL.COM   | 44522579 | RJ     |
+---------+-------------------+----------+--------+

/* VIEW */

SELECT  C.NOME, 
		C.SEXO, 
		C.EMAIL, 
		T.TIPO, 
		T.NUMERO, 
		E.BAIRRO, 
		E.CIDADE, 
		E.ESTADO
FROM CLIENTE C 
INNER JOIN TELEFONE T 
ON C.IDCLIENTE = T.ID_CLIENTE 
INNER JOIN ENDERECO E 
ON C.IDCLIENTE = E.ID_CLIENTE;



CREATE VIEW RELATORIO AS 
SELECT  C.NOME, 
		C.SEXO, 
		C.EMAIL, 
		T.TIPO, 
		T.NUMERO, 
		E.BAIRRO, 
		E.CIDADE, 
		E.ESTADO
FROM CLIENTE C 
INNER JOIN TELEFONE T 
ON C.IDCLIENTE = T.ID_CLIENTE 
INNER JOIN ENDERECO E 
ON C.IDCLIENTE = E.ID_CLIENTE;

SELECT * FROM RELATORIO;


SHOW TABLES;
SHOW DATABASES;
SHOW VIEWS; --- NAO EXISTE

/* VEMOS AS VIEWS CRIADAS PELO SHOW TABLES */


/* APAGANDO UMA VIWE */

DROP VIEW RELATORIO;
/* INSERINDO UM PREFIXO */


CREATE VIEW V_RELATORIO AS 
SELECT  C.NOME, 
		C.SEXO, 
		IFNULL(C.EMAIL, 'CLIENTE SEM EMAIL') AS 'E-MAIL',
		T.TIPO, 
		T.NUMERO, 
		E.BAIRRO, 
		E.CIDADE, 
		E.ESTADO
FROM CLIENTE C 
INNER JOIN TELEFONE T 
ON C.IDCLIENTE = T.ID_CLIENTE 
INNER JOIN ENDERECO E 
ON C.IDCLIENTE = E.ID_CLIENTE;

SELECT NOME, NUMERO,ESTADO
FROM V_RELATORIO;

INSERT INTO V_RELATORIO VALUES(
'ANDREIA','F','ANDREIA@UOL.COM.BR','CEL','878878090','CENTRO','VITORIA','ES'
);

DELETE FROM V_RELATORIO
WHERE NOME = 'JORGE';

UPDATE V_RELATORIO SET NOME = 'JOSE' WHERE NOME = 'JORGE';

ERROR 1394 (HY000): Can not insert into join view 'comercio.v_relatorio' without fields list
ERROR 1395 (HY000): Can not delete from join view 'comercio.v_relatorio'

CREATE TABLE JOGADORES(
	IDJOGADOR INT,
	NOME VARCHAR(30),
	ESTADO CHAR(2)
);

INSERT INTO JOGADORES VALUES(1,'GUERRERO','RS');
INSERT INTO JOGADORES VALUES(2,'GABIGOL','RJ');
INSERT INTO JOGADORES VALUES(3,'GANSO','RJ');
INSERT INTO JOGADORES VALUES(4,'NENE','RJ');
INSERT INTO JOGADORES VALUES(5,'LOVE','SP');

CREATE VIEW V_JOGADORES AS 
SELECT NOME, ESTADO
FROM JOGADORES;

SELECT * FROM V_JOGADORES;

/* NAO EH POSSIVEL REALIZAR INSERT NEM DELETE EM VIEW QUE CONTENHA JOIN, APENAS UPDATE */

DELETE FROM V_JOGADORES
WHERE NOME = 'GUERRERO';

SELECT * FROM V_JOGADORES;

INSERT INTO V_JOGADORES VALUES('GUERRERO','RS');

/* EM VIEW SEM JOIN EH POSSIVEL ALTERAR TUDO */


SELECT * FROM V_RELATORIO
WHERE SEXO = 'F';


                               /* ORDER BY */

CREATE TABLE ALUNOS(
	NUMERO INT,
	NOME VARCHAR(30)
);

INSERT INTO ALUNOS VALUES(1,'JOAO');
INSERT INTO ALUNOS VALUES(1,'MARIA');
INSERT INTO ALUNOS VALUES(2,'ZOE');
INSERT INTO ALUNOS VALUES(2,'ANDRE');
INSERT INTO ALUNOS VALUES(3,'CLARA');
INSERT INTO ALUNOS VALUES(1,'CLARA');
INSERT INTO ALUNOS VALUES(4,'MAFRA');
INSERT INTO ALUNOS VALUES(5,'JANAINA');
INSERT INTO ALUNOS VALUES(1,'JANAINA');
INSERT INTO ALUNOS VALUES(3,'MARCELO');
INSERT INTO ALUNOS VALUES(4,'GIOVANI');
INSERT INTO ALUNOS VALUES(5,'ANTONIO');
INSERT INTO ALUNOS VALUES(6,'ANA');
INSERT INTO ALUNOS VALUES(6,'VIVIANE'); 

SELECT * FROM ALUNOS
ORDER BY NUMERO;

SELECT * FROM ALUNOS
ORDER BY NOME;

SELECT * FROM ALUNOS
ORDER BY 1;

SELECT * FROM ALUNOS
ORDER BY 2;

/* ORDENANDO POR MAIS DE UMA COLUNA */

SELECT * FROM ALUNOS
ORDER BY NUMERO, NOME;

SELECT * FROM ALUNOS
ORDER BY 1, 2;

/* MESCLANDO ORDER BY COM PROJECAO */

SELECT NOME FROM ALUNOS
ORDER BY NUMERO, NOME;


/* ORDER BY DESC / ASC */

SELECT * FROM ALUNOS
ORDER BY 1 ASC;

SELECT * FROM ALUNOS
ORDER BY 1 DESC;

SELECT * FROM ALUNOS
ORDER BY 1, 2 DESC;

SELECT * FROM ALUNOS
ORDER BY 1 DESC, 2 DESC;

+--------+---------+
| NUMERO | NOME    |
+--------+---------+
|      6 | VIVIANE |
|      6 | ANA     |
|      5 | JANAINA |
|      5 | ANTONIO |
|      4 | MAFRA   |
|      4 | GIOVANI |
|      3 | MARCELO |
|      3 | CLARA   |
|      2 | ZOE     |
|      2 | ANDRE   |
|      1 | MARIA   |
|      1 | JOAO    |
|      1 | JANAINA |
|      1 | CLARA   |
+--------+---------+


/* ORDENANDO COM JOINS */


SELECT  C.NOME, 
		C.SEXO, 
		IFNULL(C.EMAIL,'CLIENTE SEM EMAIL') AS "E-MAIL", 
		T.TIPO, 
		T.NUMERO, 
		E.BAIRRO, 
		E.CIDADE, 
		E.ESTADO
FROM CLIENTE C 
INNER JOIN TELEFONE T 
ON C.IDCLIENTE = T.ID_CLIENTE 
INNER JOIN ENDERECO E 
ON C.IDCLIENTE = E.ID_CLIENTE
ORDER BY 1;

SHOW TABLES;

SELECT * FROM V_RELATORIO
ORDER BY 1;


/* DELIMITADOR
 ALERANDO O DELIMITADOR PADRAO ; */

STATUS /* MOSTRA O DELIMITADOR USADO NO MOMENTO */

DELIMITER $

DELIMITER ;


/* STORED PROCEDURES */

DELIMITER $ /* ALTERANDO O DELIMITER PARA $*/

CREATE PROCEDURE NOME()
BEGIN
	
	QUALQUER PROGRAMACAO

END
$

CREATE PROCEDURE NOME_EMPRESA()
BEGIN
	SELECT 'UNIVERSIDADE DOS DADOS' AS EMPRESA;
END
$

-- CHAMANDO UMA PROCEDURE

CALL NOME_EMPRESA()$

-- EXCLUINDO UMA PROCEDURE
DROP PROCEDURE IF EXISTS NOME_EMPRESA$

DROP PROCEDURE CONTA$

-- PRCEDURES COM PARAMETROS

CREATE PROCEDURE CONTA(NUMERO1 INT, NUMERO2 INT)
BEGIN
	SELECT NUMERO1 + NUMERO2 AS CONTA;
END 
$

-- CHAMANDO PROCEDURE COM PARAMETROS

CALL CONTA(5,2)$

mysql> CALL CONTA(5,10)$
+-------+
| CONTA |
+-------+
|    15 |
+-------+

CALL CONTA(100,50)$
CALL CONTA(345634,4354)$
CALL CONTA(55654,56760)$
CALL CONTA(45646,6766)$

-- LIMPANDO O BANCO

DELIMITER ;

DROP DATABASE EXERCICIO;
DROP DATABASE LIVRARIA;
DROP DATABASE PROJETO;

DELIMITER $

-- PROCEDURES

CREATE DATABASE PROJETO;

USE PROJETO;

CREATE TABLE CURSOS(
	IDCURSO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	HORAS INT(3) NOT NULL,
	VALOR FLOAT(10,2) NOT NULL
);

INSERT INTO CURSOS VALUES(NULL,'JAVA',30,500.00);
INSERT INTO CURSOS VALUES(NULL, 'FUNDAMENTOS DE BANCOS DE DADOS' , 40, 700.00);

SELECT * FROM CURSOS;

CREATE PROCEDURE CAD_CURSO(P_NOME VARCHAR(30),
						   P_HORAS INT(30),
						   P_PRECO  FLOAT(10,2))
BEGIN
	
	INSERT INTO CURSOS VALUES(NULL,P_NOME,P_HORAS,P_PRECO);

END
#

DELIMITER ;

CALL CAD_CURSO('BI SQL SERVER',35,3000.00);
CALL CAD_CURSO('POWER BI',20,1000.00);
CALL CAD_CURSO('TABLEAU',30,1200.00);

/* CRIAR UMA PROCEDURE PARA CONSULTAR CURSOS */


/* A29 FUNCOES DE AGREGACAO NUMERICAS */

CREATE TABLE VENDEDORES(
	IDVENDEDOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	SEXO CHAR(1),
	JANEIRO FLOAT(10,2),
	FEVEREIRO FLOAT(10,2),
	MARCO FLOAT(10,2)
);

INSERT INTO VENDEDORES VALUES(NULL,'CARLOS','M',76234.78,88346.87,5756.90);
INSERT INTO VENDEDORES VALUES(NULL,'MARIA','F',5865.78,6768.87,4467.90);
INSERT INTO VENDEDORES VALUES(NULL,'ANTONIO','M',78769.78,6685.87,6664.90);
INSERT INTO VENDEDORES VALUES(NULL,'CLARA','F',5779.78,446886.87,8965.90);
INSERT INTO VENDEDORES VALUES(NULL,'ANDERSON','M',676545.78,77544.87,578665.90);
INSERT INTO VENDEDORES VALUES(NULL,'IVONE','F',57789.78,44774.87,68665.90);
INSERT INTO VENDEDORES VALUES(NULL,'JOAO','M',4785.78,66478.87,6887.90);
INSERT INTO VENDEDORES VALUES(NULL,'CELIA','F',89667.78,57654.87,5755.90);

/* MAX - TRAZ O VALOR MAXIMO DE UMA COLUNA */

SELECT MAX(FEVEREIRO) AS MAIOR_FEV
FROM VENDEDORES;


/* MIN - TRAZ O VALOR MINIMO DE UMA COLUNA */

SELECT MIN(FEVEREIRO) AS MENOR_FEV
FROM VENDEDORES;

/* AVG - TRAZ O VALOR MEDIO DE UMA COLUNA */

SELECT AVG(FEVEREIRO) AS MEDIA_FEV
FROM VENDEDORES;

/* VARIAS FUNCOES */

SELECT MAX(JANEIRO) AS MAX_JAN,
       MIN(JANEIRO) AS MIN_JAN,
	   AVG(JANEIRO) AS MEDIA_JAN
	   FROM VENDEDORES;
	 
/*TRUNCATE - DEFINE A QUANTIDADE CASAS DECIMAIS */
	 
SELECT MAX(JANEIRO) AS MAX_JAN,
       MIN(JANEIRO) AS MIN_JAN,
	   TRUNCATE(AVG(JANEIRO),2) AS MEDIA_JAN
	   FROM VENDEDORES;

/* A30 - AGREGANDO COM SUM() */

SELECT SUM(JANEIRO) AS TOTAL_JAN
FROM VENDEDORES;

SELECT SUM(JANEIRO) AS TOTAL_JAN,
	   SUM(FEVEREIRO) AS TOTAL_FEV,
	   SUM(MARCO) AS TOTAL_MAR
FROM VENDEDORES;

/* VENDAS POR SEXO */

SELECT SEXO, SUM(MARCO) AS TOTAL_MARCO
FROM VENDEDORES
GROUP BY SEXO;

* A 39 ENTENDENDO TRIGGERS */

/* ESTRUTURA DE UMA TRIGGER */

CREATE TRIGGER NOME
BEFORE/AFTER INSERT/DELETE/UPDATE ON TABELA
FOR EACH ROW (PARA CADA LINHA)
BEGIN -> INICIO

		QUALQUER COMANDO SQL

END -> FIM

CREATE DATABASE AULA40;

USE AULA40;

CREATE TABLE USUARIO(
	IDUSUARIO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	LOGIN VARCHAR(30),
	SENHA VARCHAR(100)
);

CREATE TABLE BKP_USUARIO(
	IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
	IDUSUARIO INT,
	NOME VARCHAR(30),
	LOGIN VARCHAR(30)
);

CREATE DATABASE AULA40;

USE AULA40;

CREATE TABLE USUARIO(
	IDUSUARIO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	LOGIN VARCHAR(30),
	SENHA VARCHAR(100)
);

CREATE TABLE BKP_USUARIO(
	IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
	IDUSUARIO INT,
	NOME VARCHAR(30),
	LOGIN VARCHAR(30)
);

/* CRIANDO A TRIGGER */


DELIMITER $

CREATE TRIGGER BACKUP_USER
BEFORE DELETE ON USUARIO
FOR EACH ROW 
BEGIN
		
	INSERT INTO BKP_USUARIO VALUES
	(NULL,OLD.IDUSUARIO,OLD.NOME,OLD.LOGIN);
END
$

INSERT INTO USUARIO VALUES(NULL,'ANDRADE','ANDRADE2009','HEXACAMPEAO');

SELECT * FROM USUARIO;

DELETE FROM USUARIO WHERE IDUSUARIO = 1;

SELECT * FROM BKP_USUARIO;



/* A 41 - COMUNICACAO ENTRE BANCOS */

CREATE DATABASE LOJA;

USE LOJA;

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

STATUS

CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE BKP_PRODUTO(
	IDBKP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

USE LOJA;

STATUS

INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,1000,'TESTE',0.0);

SELECT * FROM BACKUP.BKP_PRODUTO;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUT
BEFORE INSERT ON PRODUTO
FOR EACH ROW
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,NEW.IDPRODUTO,
	NEW.NOME,NEW.VALOR);
END 
$


DELIMITER ;

INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM',50.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO BI',80.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO ORACLE',70.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO SQL SERVER',100.00);

SELECT * FROM PRODUTO;

SELECT * FROM BACKUP.BKP_PRODUTO;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO_DEL
BEFORE DELETE ON PRODUTO
FOR EACH ROW
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,OLD.IDPRODUTO,
	OLD.NOME,OLD.VALOR);

END
$

DELIMITER ;

DELETE FROM PRODUTO WHERE IDPRODUTO = 2;

DROP TRIGGER BACKUP_PRODUT;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO
AFTER INSERT ON PRODUTO
FOR EACH ROW
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,NEW.IDPRODUTO,
	NEW.NOME,NEW.VALOR);

END
$

DELIMITER ;

INSERT INTO PRODUTO VALUES(NULL,'LIVRO C#',100.00);


SELECT * FROM PRODUTO;
SELECT * FROM BACKUP.BKP_PRODUTO;




ALTER TABLE BACKUP.BKP_PRODUTO
ADD EVENTO CHAR(1);

DROP TRIGGER BACKUP_PRODUTO_DEL;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO_DEL
BEFORE DELETE ON PRODUTO
FOR EACH ROW
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,OLD.IDPRODUTO,
	OLD.NOME,OLD.VALOR,'D');

END
$

DELIMITER ;

DELETE FROM PRODUTO WHERE IDPRODUTO = 4;

SELECT * FROM BACKUP.BKP_PRODUTO;

DELIMITER $

DROP TRIGGER BACKUP_PRODUTO_INSERT;

CREATE TRIGGER BACKUP_PRODUTO_INSERT
AFTER INSERT ON PRODUTO
FOR EACH ROW
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,NEW.IDPRODUTO,
	NEW.NOME,NEW.VALOR,'I');

END
$

DELIMITER ;

INSERT INTO PRODUTO VALUES(NULL,'LIVRO DOCKER',200.00);

SELECT * FROM PRODUTO;
SELECT * FROM BACKUP.BKP_PRODUTO;




/* A 43 - TRIGGER DE AUDITORIA */

DELIMITER ;

DROP DATABASE LOJA;

DROP DATABASE BACKUP;



CREATE DATABASE LOJA;

USE LOJA;

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM',50.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO BI',80.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO ORACLE',70.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO SQL SERVER',100.00);


/*QUANDO*/
SELECT NOW();

/*QUEM*/
SELECT CURRENT_USER();

CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE BKP_PRODUTO(
	IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR_ORIGINAL FLOAT(10,2),
	VALOR_ALTERADO FLOAT(10,2),
	DATA DATETIME,
	USUARIO VARCHAR(30),
	EVENTO CHAR(1)
	
);

USE LOJA;

SELECT * FROM PRODUTO;

DELIMITER $

CREATE TRIGGER AUDIT_PROD
AFTER UPDATE ON PRODUTO
FOR EACH ROW
BEGIN

	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,OLD.IDPRODUTO,OLD.NOME,
	OLD.VALOR,NEW.VALOR,NOW(),CURRENT_USER(),'U');
	
END
$

DELIMITER ;

UPDATE PRODUTO SET VALOR = 110.00
WHERE IDPRODUTO = 4;

SELECT * FROM PRODUTO;

SELECT * FROM BACKUP.BKP_PRODUTO;

/* A44 - AUTORELACIONAMENTO */

CREATE DATABASE AUTO_REL;

USE AUTO_REL;

CREATE TABLE CURSOS(
	IDCURSO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	HORAS INT,
	VALOR FLOAT(10,2),
	ID_PREREQ INT
);

ALTER TABLE CURSOS ADD CONSTRAINT FK_PREREQ
FOREIGN KEY(ID_PREREQ) REFERENCES CURSOS(IDCURSO);

INSERT INTO CURSOS VALUES(NULL,'BD RELACIONAL',20,400.00,NULL);
INSERT INTO CURSOS VALUES(NULL,'BUSINESS INTELLIGENCE',40,800.00,1);
INSERT INTO CURSOS VALUES(NULL,'RELATORIOS AVANCADOS',20,600.00,2);
INSERT INTO CURSOS VALUES(NULL,'LOGICA PROGRAM',20,400.00,NULL);
INSERT INTO CURSOS VALUES(NULL,'RUBY',30,500.00,4);

SELECT * FROM CURSOS;

SELECT NOME, VALOR, HORAS, IFNULL(ID_PREREQ,"SEM REQ") REQUISITO
FROM CURSOS;

/* NOME, VALOR, HORAS E O NOME DO PRE REQUISITO DO CURSO */

SELECT 
C.NOME AS CURSO, 
C.VALOR AS VALOR, 
C.HORAS AS CARGA, 
IFNULL(P.NOME, "---") AS PREREQ
FROM CURSOS C LEFT JOIN CURSOS P
ON P.IDCURSO = C.ID_PREREQ;



/* A 45 - CURSORES */

CREATE DATABASE CURSORES;
USE CURSORES;

CREATE TABLE VENDEDORES(
	IDVENDEDOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(50),
	JAN INT,
	FEV INT,
	MAR INT
);

INSERT INTO VENDEDORES VALUES(NULL,'MAFRA',32432,242334,574545);
INSERT INTO VENDEDORES VALUES(NULL,'CLARA',65465,65443,653454);
INSERT INTO VENDEDORES VALUES(NULL,'JOAO',12432,65356,8756);
INSERT INTO VENDEDORES VALUES(NULL,'LILIAN',4567,9676,8765);
INSERT INTO VENDEDORES VALUES(NULL,'ANTONIO',3467,68756,99765);
INSERT INTO VENDEDORES VALUES(NULL,'GLORIA',54786,76889,7098);

SELECT * FROM VENDEDORES;

SELECT NOME, (JAN+FEV+MAR) AS TOTAL FROM VENDEDORES;
SELECT NOME, (JAN+FEV+MAR) AS TOTAL, (JAN+FEV+MAR)/3 AS MEDIA FROM VENDEDORES;

CREATE TABLE VEND_TOTAL(
	NOME VARCHAR(50),
	JAN INT,
	FEV INT,
	MAR INT,
	TOTAL INT,
	MEDIA INT
);

DELIMITER $

CREATE PROCEDURE INSEREDADOS()
BEGIN
		DECLARE FIM INT DEFAULT 0;
		DECLARE VAR1, VAR2, VAR3, VTOTAL, VMEDIA INT;
		DECLARE VNOME VARCHAR(50);
		
		DECLARE REG CURSOR FOR(
			SELECT NOME, JAN, FEV, MAR FROM VENDEDORES
		);
		
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET FIM = 1;
		
		OPEN REG;
		
		REPEAT
		
			FETCH REG INTO VNOME, VAR1, VAR2, VAR3;
			IF NOT FIM THEN
			
				SET VTOTAL = VAR1 + VAR2 + VAR3;
				SET VMEDIA = VTOTAL / 3;
				
				INSERT INTO VEND_TOTAL VALUES(VNOME,VAR1,VAR2,VAR3,VTOTAL,VMEDIA);
				
			END IF;
			
		UNTIL FIM END REPEAT;
		
		CLOSE REG;
END
$

SELECT * FROM VENDEDORES;
SELECT * FROM VEND_TOTAL;

DELIMITER ;

CALL INSEREDADOS();

INSERT INTO VENDEDORES VALUES(NULL,'LETICIA',656,3546,234545);
INSERT INTO VENDEDORES VALUES(NULL,'CELIA',6766,56556,65454);

SELECT * FROM VENDEDORES;
SELECT * FROM VEND_TOTAL;

DELETE FROM VEND_TOTAL;

CALL INSEREDADOS();

/* A 46 TRIGGERS COM VARIAVEIS */

DELIMITER $

CREATE TRIGGER CADTOTAL
BEFORE INSERT ON VENDEDORES
FOR EACH ROW
BEGIN
		DECLARE VTOTAL, VMEDIA INT;
		
		SET VTOTAL := NEW.JAN + NEW.FEV + NEW.MAR;
		SET VMEDIA := (NEW.JAN + NEW.FEV + NEW.MAR)/3;
		
		INSERT INTO VEND_TOTAL VALUES(NEW.NOME,NEW.JAN,NEW.FEV,NEW.MAR,VTOTAL,VMEDIA);

END
$

DELIMITER ;

INSERT INTO VENDEDORES VALUES(NULL,'JULIO',9999,9999,9999);
						  
SELECT * FROM VENDEDORES;
SELECT * FROM VEND_TOTAL;

/* A47 SEGUNDA E TERCEIRAS FORMAS NORMAIS */

/*
	 PRIMEIRA FN
	 
	 ATOMICIDADE - UM CAMPO NAO PODE SER DIVISIVEL
	 UM CAMPO NAO PODE SER VETORIZADO
	 PK CHAVE PRIMARIA

*/

CREATE DATABASE CONSULTORIO;

CREATE TABLE PACIENTE(
	IDPACIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	SEXO CHAR(1),
	EMAIL VARCHAR(30),
	NASCIMENTO DATE
);

CREATE TABLE MEDICO(
	IDMEDICO INT PRIMARY KEY IDENTITY,
	NOME VARCHAR(30),
	SEXO CAHR(1),
	ESPECIALIDADE VARCHAR(30),
	FUNCIONARIO ENUM('S','N')
);

CREATE TABLE HOSPITAL(
	IDHOSPITAL INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	BAIRRO VARCHAR(30),
	CIDADE VARCHAR(30),
	ESTADO CHAR(2)
);

CREATE TABLE CONSULTA(
	IDCONSULTA INT PRIMARY KEY AUTO_INCREMENT,
	ID_PACIENTE INT,
	ID_MEDICO INT,
	ID_HOSPITAL INT,
	DATA DATETIME,
	DIAGNOSTICO VARCHAR(50)
);

CREATE TABLE INTERNACAO(
	IDINTERNACAO INT PRIMARY KEY AUTO_INCREMENT,
	ENTRADA DATETIME,
	QUARTO INT,
	SAIDA DATETIME,
	OBSERVACOES VARCHAR(50),
	ID_CONSULTA INT UNIQUE	
);  
						  

/* CRIANDO AS CONSTRAINTS - CORREÇÃO COD do OBJ (PK, FK) _ TABELA PERTENCENTE _ TABELA DE ONDE VEM*/

ALTER TABLE CONSULTA ADD CONSTRAINT FK_CONSULTA_PACIENTE
FOREIGN KEY(ID_PACIENTE) REFERENCES PACIENTE(IDPACIENTE);

ALTER TABLE CONSULTA ADD CONSTRAINT FK_CONSULTA_MEDICO
FOREIGN KEY(ID_MEDICO) REFERENCES MEDICO(IDMEDICO);

ALTER TABLE CONSULTA ADD CONSTRAINT FK_CONSULTA_HOSPITAL
FOREIGN KEY(ID_HOSPITAL) REFERENCES HOSPITAL(IDHOSPITAL);

ALTER TABLE INTERNACAO ADD CONSTRAINT FK_INTERNACAO_CONSULTA
FOREIGN KEY(ID_CONSULTA) REFERENCES CONSULTA(IDCONSULTA);